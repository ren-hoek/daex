server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /restrict {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
	auth_basic "Shiny Server";
	auth_basic_user_file /opt/etc/shadow;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

server {
    listen              443 ssl;
    ssl_certificate     /etc/nginx/nginx.crt;
    ssl_certificate_key /etc/nginx/nginx.key;


    location / {
        proxy_pass http://jupyter:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	proxy_set_header X-NginX-Proxy true;
            
        # WebSocket support
	proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ~* /(user/[^/]*)/(api/kernels/[^/]+/channels|terminals/websocket)/? {
        proxy_pass http://jupyter:8000;
        #proxy_redirect http://jupyter:8000/ $scheme://$host:8000/user;
	
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
        proxy_set_header X-NginX-Proxy true;
	
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

    }

    location /rstudio/ {
      rewrite ^/rstudio/(.*)$ /$1 break;
      proxy_pass http://rstudio:8787;
      proxy_redirect http://rstudio:8787/ $scheme://$host/rstudio/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 20d;
    }
    
    location = /shiny/02_text/ {
      rewrite ^/shiny/(.*)$ /$1 break;
      auth_basic "Shiny Server";
      auth_basic_user_file /opt/etc/shadow;
      proxy_pass http://shiny:3838;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 20d;
    }
    
    location ~ /shiny/*/ {
      rewrite ^/shiny/(.*)$ /$1 break;
      proxy_pass http://shiny:3838;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 20d;
    }


    location /restrict {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
	auth_basic "Shiny Server";
	auth_basic_user_file /opt/etc/shadow;
    }
}
